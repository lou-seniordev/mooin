version: '3'

services:
  frontend:
    build:
      context: './frontend'
    volumes:
      - react_build:/frontend/build
    networks:
      main:

  dashboard:
    build:
      context: './dashboard'
    volumes:
      - dashboard_build:/dashboard/build
    networks:
      main:

  backend:
    restart: always
    build:
      context: './server'
    command: "gunicorn server.wsgi --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      main:

  db:
    image: postgres:14.1
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_DB: $DATABASE_NAME
      POSTGRES_PASS: $DATABASE_PASSWORD
    container_name: postgres_db
    ports:
      - 5432:5432
    networks:
      main:

  nginx:
    image: nginx:1.21.6
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/frontend
      - dashboard_build:/var/www/dashboard
    ports:
      - "80:8080"
    depends_on:
      - frontend
      - dashboard
      - backend
    networks:
      main:

volumes:
  react_build:
  dashboard_build:
  pgdata:

networks:
  main:
    driver: bridge
