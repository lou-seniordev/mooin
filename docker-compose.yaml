version: '3'

services:

  landing:
    build:
      context: './services/client/landing'
    volumes:
      - landing_build:/landing/build
    networks:
      main:

  dashboard:
    build:
      context: './services/client/dashboard'
    volumes:
      - dashboard_build:/dashboard/build
    networks:
      main:

  backend:
    restart: always
    command: gunicorn server.wsgi --bind 0.0.0.0:8000
    build:
      context: './services/server'
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: ${PYTHONUNBUFFERED}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PORT: ${DATABASE_PORT}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      main:

  postgres:
    image: postgres:14.1
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 5432:5432
    networks:
      main:

  nginx:
    build:
      context: "./services/nginx"
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - landing_build:/var/www/landing
      - dashboard_build:/var/www/dashboard
    ports:
      - "80:8080"
    depends_on:
      - landing
      - dashboard
      - backend
    networks:
      main:

volumes:
  landing_build:
  dashboard_build:
  pgdata:

networks:
  main:
    driver: bridge
